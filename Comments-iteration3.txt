Group 19,

First, I have some comments on your repository:
  * As a good general rule, a repository should be self-contained; I should be able to build a project from your repository without having to get external dependencies.
    This means that:
    - You *need* to use Maven to manage your dependencies. I know you said you would, but I'm emphasizing how important it is to your project and its complex dependencies.
      If you need help, come see me about it.
      Any dependencies you can't get to work with Maven need to be committed to your repository directly.
    - You should commit your appcompat directory.
  * A repository should be portable:
    - You have some paths in your Eclipse projects that point to files outside of your repository; this means that another computer can't just use the repository as-is. In particular, your appcompat_v7 directory.

I suggest you try to clone your repository and deploy the project on a different computer to see where it goes wrong and then fix it.

Regarding your webpage:
  * Your iteration summary and iteration are very well detailed.
  * Your javadocs are good.

Regarding your project:
  * You have a bunch of warnings when you compile. They should all be gone in iteration 4 (and not by sprinkling @SuppressWarnings annotations throughout your code).
    - The import warnings can be handled by running "Organize Imports" from the "Source" menu.
    - The unparameterized type warnings can be handled by adding "<?>" (as suggested by the quick-fix dialog).
  * You shouldn't be throwing or catching Exception. Pick a subclass.
  * Why is your minSdkVersion=8?
  * Consider using JSP instead of JSF.

Regarding your tests:
  * What you have is fine for now; you'll need more for iteration 4, but you knew that.
  * You probably want a separate project for the junit tests
  * One of your tests uses "10.0.0.3" as the url, which means it doesn't run on my machine; should it be "localhost"?
  * Consider using http://cargo.codehaus.org/ to start a tomcat server during your tests' setUp().

Total Score: 96/100
